package de.htwg_konstanz.ebus.wholesaler.action;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import de.htwg_konstanz.ebus.framework.wholesaler.api.security.Security;
import de.htwg_konstanz.ebus.wholesaler.demo.ControllerServlet;
import de.htwg_konstanz.ebus.wholesaler.demo.IAction;
import de.htwg_konstanz.ebus.wholesaler.demo.LoginBean;
import de.htwg_konstanz.ebus.wholesaler.demo.util.Constants;
import de.htwg_konstanz.ebus.wholesaler.exceptions.DocumentNotValidException;
import de.htwg_konstanz.ebus.wholesaler.main.Import;

public class ImportAction implements IAction {

	public String execute(HttpServletRequest request,
			HttpServletResponse response, ArrayList<String> errorList) {

		// get the login bean from the session
		LoginBean loginBean = (LoginBean) request.getSession(true)
				.getAttribute(Constants.PARAM_LOGIN_BEAN);

		// ensure that the user is logged in
		if (loginBean != null && loginBean.isLoggedIn()) {

			// ensure that the user is allowed to execute this action
			// (authorization)
			if (Security.getInstance().isUserAllowed(loginBean.getUser(),
					Security.RESOURCE_ALL, Security.ACTION_READ)) {
				String nextPage = "welcome.jsp";

				DiskFileItemFactory factory = new DiskFileItemFactory();

				// Configure a repository
				ServletContext servletContext = request.getSession()
						.getServletContext();
				File repository = (File) servletContext
						.getAttribute("javax.servlet.context.tempdir");
				factory.setRepository(repository);

				// Create a new file upload handler
				ServletFileUpload upload = new ServletFileUpload(factory);

				// Parse the request

				try {
					List<FileItem> items = upload.parseRequest(request);
					for (FileItem item : items) {
						if (item.isFormField() == false) {
							// Process form file field (input type="file").
							InputStream filecontent = item.getInputStream();
							try {
								// Call Importfunction
								String returnValueUploadFile = new Import()
										.uploadFile(filecontent);
								filecontent.close();

								errorList.add(returnValueUploadFile);

								// Error handling
							} catch (DocumentNotValidException e) {
								errorList.add(e.getMessage());
								e.printStackTrace();
								nextPage = "import.jsp";
							}
						}
					}
				} catch (FileUploadException e) {
					errorList.add("Upload failed!!");
					e.printStackTrace();
					nextPage = "import.jsp";
				} catch (IOException e) {
					errorList.add("Upload failed!!");
					e.printStackTrace();
					nextPage = "import.jsp";
				}
				return nextPage;
			} else {
				// authorization failed -> show error message
				errorList.add("Your are not allowed to perform this action");
				// redirect to the welcome page
				return "welcome.jsp";
			}
		} else
			// redirect to the login page
			return "login.jsp";
	}

	public boolean accepts(String actionName) {
		return actionName.equalsIgnoreCase(Constants.ACTION_UPLOAD_CATALOG);
	}
}
